/**
 * Folkeregisteret - offentlig med hjemmel
 *
 * Dokumentasjonen av tjenestene via swaggerhub er under testing.  Beskrivelsene under dokumenterer rettighetspakken Offentlig med hjemmel.  Tilgang til API-et styres med OAuth2-baserte access_tokens.  Mer informasjon om tjenestene, hvordan du får tilgang og finnes på [folkeregisteret-api-dokumentasjon](https://skatteetaten.github.io/folkeregisteret-api-dokumentasjon/konsumenttjenester/)  Dokumentasjonen kan foreløpig ikke benyttes til kall mot Folkeregisterets testmiljøer.
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package im.kny.jacksonspeedup.offentligmedhjemmel.models

import im.kny.jacksonspeedup.offentligmedhjemmel.models.Folkeregisterettilgjengeliggjoeringhendelsev1Registerdata


import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.core.JsonParser
import com.fasterxml.jackson.core.JsonToken
import com.fasterxml.jackson.databind.DeserializationContext
import com.fasterxml.jackson.databind.JsonDeserializer
import com.fasterxml.jackson.databind.type.*
import java.time.*
import java.time.format.*
/**
 * 
 * @param ajourholdstidspunkt 
 * @param folkeregisteridentifikator 
 * @param hendelsestype 
 * @param egenskapshendelse 
 * @param hendelsesaarsakIDsf 
 */
data class Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse(
    @field:JsonProperty("ajourholdstidspunkt")
    val ajourholdstidspunkt: java.time.OffsetDateTime,
    @field:JsonProperty("folkeregisteridentifikator")
    val folkeregisteridentifikator: kotlin.String,
    @field:JsonProperty("hendelsestype")
    val hendelsestype: Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse.Hendelsestype,
    @field:JsonProperty("egenskapshendelse")
    val egenskapshendelse: kotlin.collections.List<Folkeregisterettilgjengeliggjoeringhendelsev1Registerdata>? = null,
    @field:JsonProperty("hendelsesaarsakIDsf")
    val hendelsesaarsakIDsf: kotlin.String? = null
) 
{
    /**
    * 
    * Values: personErOpprettet,personErReaktivert,personErOppdatert,personErOpphoert,personErViderefoertSomGjeldendeVedSammenslaaing,personErOpphoertSomDublett,personErEndretVedSplitting,personErGjenopprettetVedSplitting,personErDoed,personErBosatt,personErUtflyttet,endringIStatus,endringIIdentitetsgrunnlag,endringIUtenlandskPersonidentifikasjon,endringIUtlendingsmyndighetenesIdentifikasjonsnummer,endringILegitimasjonsdokument,endringIIdentifikasjonsnummer,endringIFalskIdentitet,endringIKontaktopplysningerForDoedsbo,endringIDeltBosted,endringIFoedsel,endringIFoedselINorge,endringIKjoenn,endringIFamilierelasjon,endringISivilstand,endringIDoedsfall,endringINavn,endringIAdressebeskyttelse,endringIBostedsadresse,endringIBostedsadresseUtenFlytting,endringIOppholdsadresse,endringIInnflytting,endringIUtflytting,endringIBrukAvSamiskSpraak,endringISametingetsValgmanntall,endringIKontaktinformasjon,endringIForeldreansvar,endringIStatsborgerskap,endringIOpphold,endringIOppholdPaaSvalbard,endringIVergemaal,endringIPerson
    */
    enum class Hendelsestype(val value: kotlin.String){
        personErOpprettet("personErOpprettet"),
        personErReaktivert("personErReaktivert"),
        personErOppdatert("personErOppdatert"),
        personErOpphoert("personErOpphoert"),
        personErViderefoertSomGjeldendeVedSammenslaaing("personErViderefoertSomGjeldendeVedSammenslaaing"),
        personErOpphoertSomDublett("personErOpphoertSomDublett"),
        personErEndretVedSplitting("personErEndretVedSplitting"),
        personErGjenopprettetVedSplitting("personErGjenopprettetVedSplitting"),
        personErDoed("personErDoed"),
        personErBosatt("personErBosatt"),
        personErUtflyttet("personErUtflyttet"),
        endringIStatus("endringIStatus"),
        endringIIdentitetsgrunnlag("endringIIdentitetsgrunnlag"),
        endringIUtenlandskPersonidentifikasjon("endringIUtenlandskPersonidentifikasjon"),
        endringIUtlendingsmyndighetenesIdentifikasjonsnummer("endringIUtlendingsmyndighetenesIdentifikasjonsnummer"),
        endringILegitimasjonsdokument("endringILegitimasjonsdokument"),
        endringIIdentifikasjonsnummer("endringIIdentifikasjonsnummer"),
        endringIFalskIdentitet("endringIFalskIdentitet"),
        endringIKontaktopplysningerForDoedsbo("endringIKontaktopplysningerForDoedsbo"),
        endringIDeltBosted("endringIDeltBosted"),
        endringIFoedsel("endringIFoedsel"),
        endringIFoedselINorge("endringIFoedselINorge"),
        endringIKjoenn("endringIKjoenn"),
        endringIFamilierelasjon("endringIFamilierelasjon"),
        endringISivilstand("endringISivilstand"),
        endringIDoedsfall("endringIDoedsfall"),
        endringINavn("endringINavn"),
        endringIAdressebeskyttelse("endringIAdressebeskyttelse"),
        endringIBostedsadresse("endringIBostedsadresse"),
        endringIBostedsadresseUtenFlytting("endringIBostedsadresseUtenFlytting"),
        endringIOppholdsadresse("endringIOppholdsadresse"),
        endringIInnflytting("endringIInnflytting"),
        endringIUtflytting("endringIUtflytting"),
        endringIBrukAvSamiskSpraak("endringIBrukAvSamiskSpraak"),
        endringISametingetsValgmanntall("endringISametingetsValgmanntall"),
        endringIKontaktinformasjon("endringIKontaktinformasjon"),
        endringIForeldreansvar("endringIForeldreansvar"),
        endringIStatsborgerskap("endringIStatsborgerskap"),
        endringIOpphold("endringIOpphold"),
        endringIOppholdPaaSvalbard("endringIOppholdPaaSvalbard"),
        endringIVergemaal("endringIVergemaal"),
        endringIPerson("endringIPerson");
    }
    class ParsedValues{
        var ajourholdstidspunkt: java.time.OffsetDateTime? = null
        var folkeregisteridentifikator: kotlin.String? = null
        var hendelsestype: Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse.Hendelsestype? = null
        var egenskapshendelse: List<Folkeregisterettilgjengeliggjoeringhendelsev1Registerdata>? = null
        var hendelsesaarsakIDsf: kotlin.String? = null
    }

    class Deserializer : JsonDeserializer<Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse>() {
        override fun deserialize(p: JsonParser, ctx: DeserializationContext): Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse {
            val parsedValues = ParsedValues()

            var curr = p.currentToken

            if (curr != JsonToken.START_OBJECT) {
                throw IllegalStateException("Should be start object")
            }

            curr = p.nextToken()

            while (curr == JsonToken.FIELD_NAME) {
                val field = p.text
                curr = p.nextToken()
                when (field) {
                    "ajourholdstidspunkt" -> parsedValues.ajourholdstidspunkt = OffsetDateTime.parse(p.text)
                    "folkeregisteridentifikator" -> parsedValues.folkeregisteridentifikator = p.text

                    "hendelsestype" -> parsedValues.hendelsestype = Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse.Hendelsestype.valueOf(p.text)

                    "egenskapshendelse" -> {
                        val list : ArrayList<Folkeregisterettilgjengeliggjoeringhendelsev1Registerdata> = ArrayList()
                        while(p.nextToken() != JsonToken.END_ARRAY) {
                            list.add(Folkeregisterettilgjengeliggjoeringhendelsev1Registerdata.deserializer.deserialize(p, ctx))
                        }
                        parsedValues.egenskapshendelse = list
                      }
                    "hendelsesaarsakIDsf" -> parsedValues.hendelsesaarsakIDsf = p.text

                    else -> p.skipChildren()
                }
                curr = p.nextToken()
            }

            return Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse(
                ajourholdstidspunkt = parsedValues.ajourholdstidspunkt!!,
                folkeregisteridentifikator = parsedValues.folkeregisteridentifikator!!,
                hendelsestype = parsedValues.hendelsestype!!,
                egenskapshendelse = parsedValues.egenskapshendelse,
                hendelsesaarsakIDsf = parsedValues.hendelsesaarsakIDsf,)
        }
    }

    companion object {
        val deserializer by lazy(LazyThreadSafetyMode.NONE) { Deserializer() }
    }
}
