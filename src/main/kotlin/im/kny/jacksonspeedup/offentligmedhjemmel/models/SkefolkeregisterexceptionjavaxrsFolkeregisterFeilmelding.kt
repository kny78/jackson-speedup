/**
 * Folkeregisteret - offentlig med hjemmel
 *
 * Dokumentasjonen av tjenestene via swaggerhub er under testing.  Beskrivelsene under dokumenterer rettighetspakken Offentlig med hjemmel.  Tilgang til API-et styres med OAuth2-baserte access_tokens.  Mer informasjon om tjenestene, hvordan du får tilgang og finnes på [folkeregisteret-api-dokumentasjon](https://skatteetaten.github.io/folkeregisteret-api-dokumentasjon/konsumenttjenester/)  Dokumentasjonen kan foreløpig ikke benyttes til kall mot Folkeregisterets testmiljøer.
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package im.kny.jacksonspeedup.offentligmedhjemmel.models


import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.core.JsonParser
import com.fasterxml.jackson.core.JsonToken
import com.fasterxml.jackson.databind.DeserializationContext
import com.fasterxml.jackson.databind.JsonDeserializer
import com.fasterxml.jackson.databind.type.*


/**
 * 
 *
 * @param alvorlighetsgrad 
 * @param feilkode 
 * @param feilmelding 
 * @param httpStatus 
 * @param tilleggsinformasjon 
 */

data class SkefolkeregisterexceptionjavaxrsFolkeregisterFeilmelding (

    @field:JsonProperty("alvorlighetsgrad")
    val alvorlighetsgrad: kotlin.String? = null,

    @field:JsonProperty("feilkode")
    val feilkode: kotlin.String? = null,

    @field:JsonProperty("feilmelding")
    val feilmelding: kotlin.String? = null,

    @field:JsonProperty("httpStatus")
    val httpStatus: kotlin.Int? = null,

    @field:JsonProperty("tilleggsinformasjon")
    val tilleggsinformasjon: kotlin.collections.Map<kotlin.String, kotlin.String>? = null

) {

    class ParsedValues{
        var alvorlighetsgrad: kotlin.String? = null
        var feilkode: kotlin.String? = null
        var feilmelding: kotlin.String? = null
        var httpStatus: kotlin.Int? = null
        var tilleggsinformasjon: kotlin.collections.Map<kotlin.String, kotlin.String>? = null
    }

    @Suppress("UNUSED_VALUE")
    class Deserializer : JsonDeserializer<SkefolkeregisterexceptionjavaxrsFolkeregisterFeilmelding>() {
        override fun deserialize(p: JsonParser, ctx: DeserializationContext): SkefolkeregisterexceptionjavaxrsFolkeregisterFeilmelding {
            val parsedValues = ParsedValues()
            var curr = p.currentToken
            if (curr != JsonToken.START_OBJECT) {
                throw IllegalStateException("Should be start object")
            }
            curr = p.nextToken()
            while (curr == JsonToken.FIELD_NAME) {
                val field = p.text
                curr = p.nextToken()
                when (field) {

                    "alvorlighetsgrad" -> parsedValues.alvorlighetsgrad = p.text
                    "feilkode" -> parsedValues.feilkode = p.text
                    "feilmelding" -> parsedValues.feilmelding = p.text
                    "httpStatus" -> parsedValues.httpStatus = p.text.toInt()
                "tilleggsinformasjon" -> {
                        val map : HashMap<String, String> = HashMap()
                        while(p.nextToken() != JsonToken.END_OBJECT) {
                            val key = p.text
                            p.nextToken()
                            map.put(key, p.text)
                        }
                        parsedValues.tilleggsinformasjon = map
                      }

                    else -> p.skipChildren()
                }
                curr = p.nextToken()
            }
            return SkefolkeregisterexceptionjavaxrsFolkeregisterFeilmelding(
                alvorlighetsgrad = parsedValues.alvorlighetsgrad,
                feilkode = parsedValues.feilkode,
                feilmelding = parsedValues.feilmelding,
                httpStatus = parsedValues.httpStatus,
                tilleggsinformasjon = parsedValues.tilleggsinformasjon,)
        }
    }
    companion object {
        val deserializer by lazy(LazyThreadSafetyMode.NONE) { Deserializer() }
    }

}

