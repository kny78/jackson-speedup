/**
 * Folkeregisteret - offentlig med hjemmel
 *
 * Dokumentasjonen av tjenestene via swaggerhub er under testing.  Beskrivelsene under dokumenterer rettighetspakken Offentlig med hjemmel.  Tilgang til API-et styres med OAuth2-baserte access_tokens.  Mer informasjon om tjenestene, hvordan du får tilgang og finnes på [folkeregisteret-api-dokumentasjon](https://skatteetaten.github.io/folkeregisteret-api-dokumentasjon/konsumenttjenester/)  Dokumentasjonen kan foreløpig ikke benyttes til kall mot Folkeregisterets testmiljøer.
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package im.kny.jacksonspeedup.offentligmedhjemmel.models

import im.kny.jacksonspeedup.offentligmedhjemmel.models.Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse


import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.core.JsonParser
import com.fasterxml.jackson.core.JsonToken
import com.fasterxml.jackson.databind.DeserializationContext
import com.fasterxml.jackson.databind.JsonDeserializer
import com.fasterxml.jackson.databind.type.*
import java.time.*
import java.time.format.*
/**
 * 
 * @param dokumentidentifikator 
 * @param hendelse 
 * @param skjemaversjon 
 */
data class Folkeregisterettilgjengeliggjoeringhendelsev1DokumentForHendelse(
    @field:JsonProperty("dokumentidentifikator")
    val dokumentidentifikator: kotlin.String,
    @field:JsonProperty("hendelse")
    val hendelse: Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse,
    @field:JsonProperty("skjemaversjon")
    val skjemaversjon: kotlin.String
) 
{
    class ParsedValues{
        var dokumentidentifikator: kotlin.String? = null
        var hendelse: Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse? = null
        var skjemaversjon: kotlin.String? = null
    }

    class Deserializer : JsonDeserializer<Folkeregisterettilgjengeliggjoeringhendelsev1DokumentForHendelse>() {
        override fun deserialize(p: JsonParser, ctx: DeserializationContext): Folkeregisterettilgjengeliggjoeringhendelsev1DokumentForHendelse {
            val parsedValues = ParsedValues()

            var curr = p.currentToken

            if (curr != JsonToken.START_OBJECT) {
                throw IllegalStateException("Should be start object")
            }

            curr = p.nextToken()

            while (curr == JsonToken.FIELD_NAME) {
                val field = p.text
                curr = p.nextToken()
                when (field) {
                    "dokumentidentifikator" -> parsedValues.dokumentidentifikator = p.text
                    "hendelse" -> parsedValues.hendelse = Folkeregisterettilgjengeliggjoeringhendelsev1Hendelse.deserializer.deserialize(p, ctx)
                    "skjemaversjon" -> parsedValues.skjemaversjon = p.text


                    else -> p.skipChildren()
                }
                curr = p.nextToken()
            }

            return Folkeregisterettilgjengeliggjoeringhendelsev1DokumentForHendelse(
                dokumentidentifikator = parsedValues.dokumentidentifikator!!,
                hendelse = parsedValues.hendelse!!,
                skjemaversjon = parsedValues.skjemaversjon!!,)
        }
    }

    companion object {
        val deserializer by lazy(LazyThreadSafetyMode.NONE) { Deserializer() }
    }
}
