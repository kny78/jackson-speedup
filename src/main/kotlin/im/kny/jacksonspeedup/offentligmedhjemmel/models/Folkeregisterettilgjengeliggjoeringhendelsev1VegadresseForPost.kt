/**
 * Folkeregisteret - offentlig med hjemmel
 *
 * Dokumentasjonen av tjenestene via swaggerhub er under testing.  Beskrivelsene under dokumenterer rettighetspakken Offentlig med hjemmel.  Tilgang til API-et styres med OAuth2-baserte access_tokens.  Mer informasjon om tjenestene, hvordan du får tilgang og finnes på [folkeregisteret-api-dokumentasjon](https://skatteetaten.github.io/folkeregisteret-api-dokumentasjon/konsumenttjenester/)  Dokumentasjonen kan foreløpig ikke benyttes til kall mot Folkeregisterets testmiljøer.
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package im.kny.jacksonspeedup.offentligmedhjemmel.models

import im.kny.jacksonspeedup.offentligmedhjemmel.models.Folkeregisterettilgjengeliggjoeringhendelsev1Adressenummer
import im.kny.jacksonspeedup.offentligmedhjemmel.models.Folkeregisterettilgjengeliggjoeringhendelsev1Poststed

import com.fasterxml.jackson.annotation.JsonProperty
import com.fasterxml.jackson.core.JsonParser
import com.fasterxml.jackson.core.JsonToken
import com.fasterxml.jackson.databind.DeserializationContext
import com.fasterxml.jackson.databind.JsonDeserializer
import com.fasterxml.jackson.databind.type.*


/**
 * 
 *
 * @param adressekode 
 * @param adressenavn 
 * @param adressenummer 
 * @param adressetilleggsnavn 
 * @param bruksenhetsnummer 
 * @param coAdressenavn 
 * @param poststed 
 */

data class Folkeregisterettilgjengeliggjoeringhendelsev1VegadresseForPost (

    @field:JsonProperty("adressekode")
    val adressekode: kotlin.String? = null,

    @field:JsonProperty("adressenavn")
    val adressenavn: kotlin.String? = null,

    @field:JsonProperty("adressenummer")
    val adressenummer: Folkeregisterettilgjengeliggjoeringhendelsev1Adressenummer? = null,

    @field:JsonProperty("adressetilleggsnavn")
    val adressetilleggsnavn: kotlin.String? = null,

    @field:JsonProperty("bruksenhetsnummer")
    val bruksenhetsnummer: kotlin.String? = null,

    @field:JsonProperty("coAdressenavn")
    val coAdressenavn: kotlin.String? = null,

    @field:JsonProperty("poststed")
    val poststed: Folkeregisterettilgjengeliggjoeringhendelsev1Poststed? = null

) {

    class ParsedValues{
        var adressekode: kotlin.String? = null
        var adressenavn: kotlin.String? = null
        var adressenummer: Folkeregisterettilgjengeliggjoeringhendelsev1Adressenummer? = null
        var adressetilleggsnavn: kotlin.String? = null
        var bruksenhetsnummer: kotlin.String? = null
        var coAdressenavn: kotlin.String? = null
        var poststed: Folkeregisterettilgjengeliggjoeringhendelsev1Poststed? = null
    }
    class Deserializer : JsonDeserializer<Folkeregisterettilgjengeliggjoeringhendelsev1VegadresseForPost>() {
        override fun deserialize(p: JsonParser, ctx: DeserializationContext): Folkeregisterettilgjengeliggjoeringhendelsev1VegadresseForPost {
            val parsedValues = ParsedValues()
            var curr = p.currentToken
            if (curr != JsonToken.START_OBJECT) {
                throw IllegalStateException("Should be start object")
            }
            curr = p.nextToken()
            while (curr == JsonToken.FIELD_NAME) {
                val field = p.text
                p.nextToken()
                when (field) {

                    "adressekode" -> parsedValues.adressekode = p.text
                    "adressenavn" -> parsedValues.adressenavn = p.text
                    "adressenummer" -> parsedValues.adressenummer = Folkeregisterettilgjengeliggjoeringhendelsev1Adressenummer.deserializer.deserialize(p, ctx)
                    "adressetilleggsnavn" -> parsedValues.adressetilleggsnavn = p.text
                    "bruksenhetsnummer" -> parsedValues.bruksenhetsnummer = p.text
                    "coAdressenavn" -> parsedValues.coAdressenavn = p.text
                    "poststed" -> parsedValues.poststed = Folkeregisterettilgjengeliggjoeringhendelsev1Poststed.deserializer.deserialize(p, ctx)

                    else -> p.skipChildren()
                }
                curr = p.nextToken()
            }
            return Folkeregisterettilgjengeliggjoeringhendelsev1VegadresseForPost(
                adressekode = parsedValues.adressekode,
                adressenavn = parsedValues.adressenavn,
                adressenummer = parsedValues.adressenummer,
                adressetilleggsnavn = parsedValues.adressetilleggsnavn,
                bruksenhetsnummer = parsedValues.bruksenhetsnummer,
                coAdressenavn = parsedValues.coAdressenavn,
                poststed = parsedValues.poststed,)
        }
    }
    companion object {
        val deserializer by lazy(LazyThreadSafetyMode.NONE) { Deserializer() }
    }

}

